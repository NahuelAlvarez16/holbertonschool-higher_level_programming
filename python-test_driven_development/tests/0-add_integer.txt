The "0-add_integer" module


>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(-12,21)
9

>>> add_integer(0)
98

>>> add_integer()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(0,)
98

>>> add_integer("3",0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nahuel/Desktop/repos/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 12, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(0, 0.0)
0

>>> add_integer("0", "0")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nahuel/Desktop/repos/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 12, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(12, "0")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nahuel/Desktop/repos/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 14, in add_integer
    raise TypeError("b must be an integer")
TypeError: b must be an integer

>>> add_integer(None, 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nahuel/Desktop/repos/holbertonschool-higher_level_programming/python-test_driven_development/0-add_integer.py", line 12, in add_integer
    raise TypeError("a must be an integer")
TypeError: a must be an integer

>>> add_integer(12.43, 21.43)
33