The "4-print_square" module


>>> print_square = __import__('4-print_square').print_square

>>> print_square(2)
##
##

>>> print_square(None)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nahuel/Desktop/repos/holbertonschool-higher_level_programming/python-test_driven_development/4-print_square.py", line 8, in print_square
    raise TypeError("size must be an integer")
TypeError: size must be an integer

>>> print_square(0)


>>> print_square(-2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nahuel/Desktop/repos/holbertonschool-higher_level_programming/python-test_driven_development/4-print_square.py", line 10, in print_square
    raise ValueError("size must be >= 0")
ValueError: size must be >= 0

>>> print_square()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: print_square() missing 1 required positional argument: 'size'

>>> print_square(float('nan'))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/nahuel/Desktop/repos/holbertonschool-higher_level_programming/python-test_driven_development/4-print_square.py", line 11, in print_square
    for i in range(size):
TypeError: 'float' object cannot be interpreted as an integer